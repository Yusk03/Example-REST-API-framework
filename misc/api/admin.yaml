openapi: 3.0.3
info:
  title: ADMINS API
  version: 0.0.64
  description: "Last modified 2023-03-08"
  contact:
    name: Have a question? Support contacts
    url: https://support.net.ua/
    email: dev@.net.ua
servers:
  - url: https://demo.net.ua:9443/api.cgi
    description: Test Demo Server
tags:
  - name: users
    description: Работа с пользователями
  - name: groups
    description: Группы пользователей
  - name: tp
    description: Тарифные планы
  - name: msgs
    description: Msgs
  - name: internet
    description: Internet
  - name: iptv
    description: Iptv
  - name: abon
    description: Abon
  - name: crm
    description: Crm
  - name: districts
    description: Районы
  - name: streets
    description: Улицы
  - name: builds
    description: Дома
  - name: payments
    description: Оплаты
  - name: fees
    description: Списания
  - name: finance
    description: Получение курсов валют
  - name: online
    description: Сессии пользователя
  - name: version
    description: Версии
  - name: equipment
    description: Работа с оборудованием
  - name: ureports
    description: Работа с оповещениями
  - name: admins
    description: Работа с администраторами
  - name: voip
    description: Работа с телефонией
  - name: cablecat
    description: Работа с модулем Cablecat
paths:
  /admins/{AID}:
    get:
      tags:
        - admins
      summary: Информация администратора
      operationId: adminInfo
      parameters:
        - name: AID
          in: path
          required: true
          description: ID администратора
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminInfo"
      security:
        - KEY: []
    put:
      tags:
        - admins
      summary: Изменить администратора
      operationId: adminChange
      parameters:
        - name: AID
          in: path
          required: true
          description: ID администратора
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminChangeRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminChangeResponse"
      security:
        - KEY: []
  /admins:
    post:
      tags:
        - admins
      summary: Добавить администратора
      operationId: adminAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminAddResponse"
        400:
          description: Нет поля логин
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 700
                  errstr:
                    type: string
                    example: No field aLogin
      security:
        - KEY: []
  /admins/{AID}/permissions:
    post:
      tags:
        - admins
      summary: Изменить права администратора
      operationId: adminSetPermissions
      parameters:
        - name: AID
          in: path
          description: ID администратора
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminSetPermissionsRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminSetPermissionsResponse"
      security:
        - KEY: []
  /ureports/user/list:
    get:
      tags:
        - ureports
      summary: Список пользователей с включенными оповещениями
      operationId: ureportsUserList
      parameters:
        - name: tpId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: tpName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: destination
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: type
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: status
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: uid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: reportsCount
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 100000
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UreportsUserList"
      security:
        - KEY: []
  /ureports/user/{UID}:
    post:
      tags:
        - ureports
      summary: Добавить оповещения пользователю
      operationId: ureportsAddUser
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UreportsUserRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UreportsAddUserResponse"
        400:
          description: Нет поля tpId
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 10202
                  errstr:
                    type: string
                    example: No field tpId
      security:
        - KEY: []
    put:
      tags:
        - ureports
      summary: изменить оповещения пользователю
      operationId: ureportsChangeUser
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UreportsUserRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UreportsChangeUserResponse"
        400:
          description: Нет поля tpId
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 10205
                  errstr:
                    type: string
                    example: No field tpId
      security:
        - KEY: []
    delete:
      tags:
        - ureports
      summary: Удалить оповещения пользователю
      operationId: ureportsDeleteUser
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - KEY: []
  /equipment/onu/list/:
    get:
      tags:
        - equipment
      summary: Список ONU
      operationId: getOnuList
      parameters:
        - name: branch
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: branchDesc
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: vlanId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuVlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuDesc
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuBillingDesc
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: oltRxPower
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuDhcpPort
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuGraph
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasIp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuSnmpId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: dateTime
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: serverVlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: gid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: traffic
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: login
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: userMac
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: macBehindOnu
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: distance
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: externalSystemLink
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: macSerial
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: status
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnuList"
      security:
        - KEY: []
  /equipment/onu/{ID}/:
    get:
      tags:
        - equipment
      summary: Возвращает ONU по id
      operationId: getOnuById
      parameters:
        - name: ID
          in: path
          description: ID ONU
          required: true
          schema:
            type: integer
        - name: branch
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: branchDesc
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: vlanId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuVlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuDesc
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuBillingDesc
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: oltRxPower
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuDhcpPort
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuGraph
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasIp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: onuSnmpId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: dateTime
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: serverVlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: gid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: traffic
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: login
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: userMac
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: macBehindOnu
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: distance
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: macSerial
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: status
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: externalSystemLink
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnuList"
      security:
        - KEY: [ ]
  /equipment/box/list/:
    get:
      tags:
        - equipment
      summary: Список OLT
      operationId: getOltList
      parameters:
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OltList"
      security:
        - KEY: []
  /equipment/used/ports/:
    get:
      tags:
        - equipment
      summary: Список использованных портов
      operationId: getUsedPorts
      parameters:
        - name: nasId
          in: query
          description: Поиск по nasId
          schema:
            type: string
        - name: portsOnly
          in: query
          description: только порты
          schema:
            type: boolean
        - name: fullList
          in: query
          description: полный список
          schema:
            type: boolean
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsedPorts"
      security:
        - KEY: []
  /equipment/nas/types/:
    get:
      tags:
        - equipment
      summary: Список типов серверов доступа
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasTypesList"
      security:
        - KEY: []
  /equipment/nas/list/extra/:
    get:
      tags:
        - equipment
      summary: Список серверов доступа с дополнительной иформацией
      operationId: getNAsListExtra
      parameters:
        - name: type
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: systemId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: typeId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: vendorId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: vendorName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasType
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: modelName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: snmpTpl
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: modelId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: status
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: disable
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: typeName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ports
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: portsWithExtra
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: mac
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: portShift
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: autoPortShift
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: fdbUsersPortNumberIndex
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: eponSupportedOnus
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: gponSupportedOnus
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: geponSupportedOnus
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: defaultOnuRegTemplateEpon
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: defaultOnuRegTemplateGpon
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasIp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: mngHostPort
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: mngUser
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasMngUser
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: nasMngUserPassword
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasGid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: nasGroupName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: districtId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: streetId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: locationId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: domainId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: domainName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: coordx
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: coordy
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: revision
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: snmpVersion
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: serverVlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: lastActivity
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: internetVlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: tr069Vlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: iptvVlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: nasDescr
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasIndentifier
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasAlive
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: nasRadPairs
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasEntrance
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: zabbixHostid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasListExtra"
      security:
        - KEY: []
  /equipment/nas/list/:
    get:
      tags:
        - equipment
      summary: Список серверов доступа
      operationId: getNAsList
      parameters:
        - name: nasName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasType
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: disable
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: mac
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasIp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: mngHostPort
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: mngUser
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasMngUser
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: nasMngUserPassword
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: gid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: nasGroupName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: districtId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: locationId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: domainId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: descr
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasIndentifier
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: alive
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: nasRadPairs
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasEntrance
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasFloor
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: addressFull
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: zabbixHostid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
        - name: short
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasList"
      security:
        - KEY: []
  /equipment/nas/:
    post:
      tags:
        - equipment
      summary: Добавить сервер доступа
      operationId: nasAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NasRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasAddResponse200"
        400:
          description: Нет поля ip
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasAddResponse400"
      security:
        - KEY: []
  /equipment/nas/{ID}/:
    put:
      tags:
        - equipment
      summary: Изменить сервер доступа
      operationId: nasChange
      parameters:
        - name: ID
          in: path
          description: ID сервера доступа
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NasRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasChangeResponse"
        400:
          description: Нет поля ip
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 205
                  errstr:
                    type: string
                    example: No field ip
      security:
        - KEY: []
    delete:
      tags:
        - equipment
      summary: Удалить сервер доступа
      operationId: nasDelete
      parameters:
        - name: ID
          in: path
          description: ID сервера доступа
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - KEY: []
  /equipment/nas/groups/list/:
    get:
      tags:
        - equipment
      summary: Список групп серверов доступа
      operationId: getNasGroups
      parameters:
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 100000
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasGroupsList"
      security:
        - KEY: []
  /equipment/nas/groups/add/:
    post:
      tags:
        - equipment
      summary: Добавить группу серверов доступа
      operationId: nasGroupAdd
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Test API
                comments:
                  type: string
                  example: created as example for REST API
                disable:
                  type: number
                  example: 1
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasGroupAddResponse200"
        400:
          description: Нет поля ip
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasAddResponse400"
      security:
        - KEY: []
  /equipment/nas/groups/{ID}/:
    put:
      tags:
        - equipment
      summary: Изменить группу серверов доступа
      operationId: nasGroupChange
      parameters:
        - name: ID
          in: path
          description: ID группы сервера доступа
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Test API
                comments:
                  type: string
                  example: changed as example for REST API
                disable:
                  type: number
                  example: 1
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasGroupChangeResponse200"
        400:
          description: Нет поля ip
          content:
            application/json:
              schema:
                type: object
                properties:
                  affected:
                    type: integer
                    example: 0
                  total:
                    type: integer
                    example: 0
                  errno:
                    type: integer
                    example: 2
                  errstr:
                    type: string
                    example: ERROR_NOT_EXIST
      security:
        - KEY: []
    delete:
      tags:
        - equipment
      summary: Удалить группу серверов доступа
      operationId: nasGroupDelete
      parameters:
        - name: ID
          in: path
          description: ID группы сервера доступа
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  affected:
                    type: number
                    example: 1
                  total:
                    type: number
                    example: 0
      security:
        - KEY: []
  /equipment/nas/ip/pools/:
    get:
      tags:
        - equipment
      summary: Список IP pools к серверам доступа
      operationId: getIpPoolsList
      parameters:
        - name: id
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: poolName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: firstIp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: lastIp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ip
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: lastIpNum
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: IpCount
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipFree
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: priority
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: speed
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: name
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nas
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: netmask
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: gateway
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: static
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: activeNasId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipSkip
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: comments
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: dns
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: vlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: guest
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nextPool
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: showAllColumns
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipv6Prefix
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipv6Mask
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipv6Temp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipv6Pd
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipv6PdMask
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipv6PdTemp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 100000
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
            default: false
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NasIpPools"
      security:
        - KEY: []
    post:
      tags:
        - equipment
      summary: Добавить IP pool к серверу доступа
      operationId: nasIpPoolsAdd
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                poolId:
                  type: number
                  example: 1
                nasId:
                  type: number
                  example: 2
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                properties:
                  name:
                    type: string
                    example: Test API
                  comments:
                    type: string
                    example: changed as example for REST API
                  disable:
                    type: number
                    example: 1
        400:
          description: Нет поля ip
          content:
            application/json:
              schema:
                properties:
                  errno:
                    type: number
                    example: 209
                  errstr:
                    type: string
                    example: No field nasId
      security:
        - KEY: []
  /equipment/nas/ip/pools/{nasId}/{poolId}:
    delete:
      tags:
        - equipment
      summary: Удалить IP pool привязанный к серверу доступа
      operationId: nasIpPoolsDelete
      parameters:
        - name: nasId
          in: path
          description: ID сервера доступа
          required: true
          schema:
            type: integer
        - name: poolId
          in: path
          description: ID пула
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - KEY: []
  /users:
    post:
      tags:
        - users
      summary: Добавить нового пользователя
      operationId: addUser
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCreated"
      security:
        - KEY: []
  /users/all:
    get:
      tags:
        - users
      summary: Получить всех пользователей
      parameters:
        - name: fio
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: fio2
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: fio3
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: deposit
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: extDeposit
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: extBillId
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: credit
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: creditDate
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: loginStatus
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: login
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: phone
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: email
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: floor
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: entrance
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: addressFlat
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: pasportDate
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: pasportNum
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: pasportGrant
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: city
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: zip
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: gid
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: companyId
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: companyName
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: contractId
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: contractSufix
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: contractDate
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: expire
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: reduction
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: lastPayment
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: lastFees
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: registration
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: reductionDate
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: comments
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: billId
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: activate
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: acceptRules
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: password
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: birthDate
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: taxNumber
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
      security:
        - KEY: []
  /users/{UID}:
    get:
      tags:
        - users
      summary: Получить пользователя по UID
      description: Возвращает пользователя
      operationId: getUserByUID
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
            format: int64
        - name: showPassword
          in: query
          description: Параметр который возвращает пароль пользователя
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
    put:
      tags:
        - users
      summary: Обновить информацию о пользователе
      operationId: updateUser
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
      security:
        - KEY: []
    delete:
      tags:
        - users
      summary: Удалить пользователя
      description: Удаление пользователя по UID, полностью через API пользователя невозможно
      operationId: deleteUser
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: date
          in: query
          description: Дата удаления
          schema:
            type: string
            example: '2023-01-01'
        - name: comments
          in: query
          description: Комментарии к удалению
          schema:
            type: string
            example: Больше не наш абонент
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted user with uid 103394
                  uid:
                    type: number
                    example: 103394
        400:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 15
                  errstr:
                    type: string
                    example: User not found with uid 103399
      security:
        - KEY: []
  /users/{UID}/pi:
    get:
      tags:
        - users
      summary: Получить персональную информацию о пользователе
      description: Возвращает персональную информацию пользователя
      operationId: getUserPiByUID
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPi"
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
    put:
      tags:
        - users
      summary: Изменение персональной информации пользователю
      operationId: changeUserPi
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPi"
        required: true
      responses:
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
    post:
      tags:
        - users
      summary: Добавление персональной информации пользователю
      operationId: addUserPi
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPi"
        required: true
      responses:
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /users/{UID}/contacts:
    get:
      tags:
        - users
      summary: Получить контакты пользователя по UID
      description: Возвращает контакты пользователя
      operationId: getUserContactsByUID
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactsArray"
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
    post:
      tags:
        - users
      summary: Добавление контакта пользователю
      operationId: updateUserContact
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserContactAdd"
        required: true
      responses:
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /users/{UID}/contacts/{ID}:
    put:
      tags:
        - users
      summary: Обновить контакт пользователю
      operationId: updateUserConctact
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: ID
          in: path
          description: ID контакта
          required: true
          schema:
            type: integer
            format: int64
      responses:
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
    delete:
      tags:
        - users
      summary: Удалить контакт пользователя
      operationId: deleteUserContact
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: ID
          in: path
          description: ID контакта
          required: true
          schema:
            type: integer
            format: int64
      responses:
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /users/contacts:
    post:
      tags:
        - users
      summary: Получить контакты
      description: Возвращает контакты пользователей
      operationId: getContacts
      requestBody:
        description: Параметры для фильтрации контактов
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contacts"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactsArray"
      security:
        - KEY: []
  /users/internet/all:
    get:
      tags:
        - internet
      summary: Получить всех пользователей
      parameters:
        - name: cid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: cpeMac
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: vlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: serverVlan
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: joinService
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: simultaneonsly
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: speed
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: port
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: allFilterId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: filterId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: tpId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: tpNum
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: tpName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: monthFee
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: abonDistribution
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: dayFee
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: personalTp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: paymentType
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: disable
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: ipnActivate
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: dayTrafLimit
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: weekTrafLimit
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: totalTrafLimit
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: feesMethod
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: nasIp
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: fio
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: fio2
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: fio3
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: deposit
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: extDeposit
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: extBillId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: credit
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: creditDate
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: loginStatus
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: phone
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: email
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: floor
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: entrance
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: addressFlat
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pasportDate
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pasportNum
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pasportGrant
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: city
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: zip
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: gid
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: companyId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: companyName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: contractId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: contractSufix
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: contractDate
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: expire
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: reduction
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: lastPayment
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: lastFees
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: registration
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: reductionDate
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: comments
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: billId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: activate
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: acceptRules
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: password
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: birthDate
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: taxNumber
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 100000
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInternetList"
      security:
        - KEY: []
  /users/{UID}/session/hangup:
    post:
      tags:
        - internet
      summary: Hangup сессии абонента
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InternetHangupRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternetHangupResponse"
      security:
        - KEY: []
  /users/{UID}/internet:
    get:
      tags:
        - internet
      summary: Получить список ТП Internet пользователя
      description: Возвращает ТП интернет пользователя
      operationId: getUserInternetByUID
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInternetList"
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
    post:
      tags:
        - internet
      summary: Добавление ТП Internet пользователю
      operationId: addUserInternetDepracted
      deprecated: true
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInternet"
        required: true
      responses:
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /internet/{UID}/{ID}/warnings:
    get:
      tags:
        - internet
      summary: Информация о списаниях
      operationId: userInternetWarnings
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: number
        - name: ID
          in: path
          description: ID услуги
          required: true
          schema:
            type: number
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternetWarnings"
      security:
        - KEY: []
  /internet/{UID}/activate:
    post:
      tags:
        - internet
      summary: Добавление ТП Интернет пользователю
      operationId: addUserInternet
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInternetActivate"
        required: true
      responses:
        200:
          description: Успешно добавлено
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully added
        400:
          description: Нет поля tpId
          content:
            text/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 100
                  errstr:
                    type: string
                    example: No field tpId
      security:
        - KEY: []
    put:
      tags:
        - internet
      summary: Изменение  ТП Internet пользователю
      operationId: changeUserInternet
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInternetChange"
        required: true
      responses:
        200:
          description: Успешно изменено
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully changed
        400:
          description: Нет id услуги
          content:
            text/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 102
                  errstr:
                    type: string
                    example: No field id
      security:
        - KEY: []
  /users/{UID}/internet/{ID}:
    get:
      tags:
        - internet
      summary: Информация об интернет услуге пользователя по ID услуги
      operationId: internetInfoUser
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: ID
          in: path
          description: ID услуги
          required: true
          schema:
            type: integer
            format: int64
      responses:
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /users/{UID}/iptv:
    get:
      tags:
        - iptv
      summary: Получить список ТП Iptv пользователя
      description: Возвращает ТП Iptv пользователя
      operationId: getUserIptvByUID
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserIptvList"
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /users/{UID}/iptv/{ID}:
    get:
      tags:
        - iptv
      summary: Информация об Iptv услуге пользователя по ID услуги
      operationId: iptvInfoUser
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: ID
          in: path
          description: ID услуги
          required: true
          schema:
            type: integer
            format: int64
      responses:
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /msgs/:
    post:
      tags:
        - msgs
      summary: Добавить сообщение
      operationId: addMsgs
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Msgs"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /msgs/{ID}:
    get:
      tags:
        - msgs
      summary: Получить сообщение по ID
      description: Возвращает сообщение
      operationId: getMsgsInfoByID
      parameters:
        - name: ID
          in: path
          description: ID сообщения
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Msgs"
        404:
          description: Сообщение не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
    put:
      tags:
        - msgs
      summary: Обновить информацию о сообщении
      operationId: updateMsgs
      parameters:
        - name: ID
          in: path
          description: ID сообщения
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Msgs"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
      security:
        - KEY: []
  /msgs/list:
    post:
      tags:
        - msgs
      summary: Получить список сообщений
      operationId: msgsList
      requestBody:
        description: Параметры, по которым можно фильтровать сообщения
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Msgs"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /msgs/{ID}/reply:
    get:
      tags:
        - msgs
      summary: Ответы на сообщение
      operationId: repliesListToMsgs
      parameters:
        - name: ID
          in: path
          description: ID сообщения
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MsgsRepliesList"
      security:
        - KEY: []
    post:
      tags:
        - msgs
      summary: Ответить на сообщение
      operationId: addReplyToMsgs
      parameters:
        - name: ID
          in: path
          description: ID сообщения
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MsgsReply"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /msgs/reply/{replyId}/attachment:
    post:
      tags:
        - msgs
      summary: Прикрепление файла к ответу
      operationId: addAttachmentToReply
      parameters:
        - name: replyId
          in: path
          description: ID ответа на сообщение
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MsgsReplyAttachment"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /msgs/chapters:
    get:
      tags:
        - msgs
      summary: Получить список разделов
      operationId: chaptersList
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MsgsChapter"
      security:
        - KEY: []
  /msgs/workflow:
    post:
      tags:
        - msgs
      summary: Добавить рабочий процесс
      operationId: addMsgsWorkflow
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MsgsWorkflow"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /msgs/workflow/{id}:
    post:
      tags:
        - msgs
      summary: Редактировать рабочий процесс
      operationId: changeMsgsWorkflow
      parameters:
        - name: id
          in: path
          description: ID рабочего процесса
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MsgsWorkflow"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /groups:
    get:
      tags:
        - groups
      summary: Получить группы пользователей
      description: Возвращает группы пользователей
      operationId: getGroupsList
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Groups"
      security:
        - KEY: []
  /tp/{tpID}:
    get:
      tags:
        - tp
      summary: Получить информацию по тарифному плану
      description: Возвращает тарифный план
      operationId: getTpInfo
      parameters:
        - name: tpID
          in: path
          description: tpID тарифного плана
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tp"
        404:
          description: Тарифный план не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /tp/{tpID}/intervals/:
    get:
      tags:
        - tp
      summary: Получить информацию по интервалам ТП
      description: Возвращает интервалы ТП
      operationId: getTpIntervalsInfo
      parameters:
        - name: tpID
          in: path
          description: tpID тарифного плана
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TpIntervals"
        404:
          description: Тарифный план не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /districts:
    get:
      tags:
        - districts
      summary: Получить районы
      description: Возвращает список районов
      operationId: getDistricts
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DistrictsArray"
      security:
        - KEY: []
    post:
      tags:
        - districts
      summary: Добавление района
      operationId: addDistrict
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Districts"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /districts/{ID}:
    get:
      tags:
        - districts
      summary: Получить информацию о районе
      operationId: getDistrictInfo
      parameters:
        - name: ID
          in: path
          description: ID района
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Districts"
      security:
        - KEY: []
    put:
      tags:
        - districts
      summary: Обновить информацию о районе
      operationId: updateDistrict
      parameters:
        - name: ID
          in: path
          description: ID района
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Districts"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
      security:
        - KEY: []
  /streets:
    get:
      tags:
        - streets
      summary: Получить улицы
      description: Возвращает список улиц
      operationId: getStreets
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreetsArray"
      security:
        - KEY: []
    post:
      tags:
        - streets
      summary: Добавление района
      operationId: addStreet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Streets"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /streets/{ID}:
    get:
      tags:
        - streets
      summary: Получить информацию о улице
      description: Возвращает улицу
      operationId: getStreetInfo
      parameters:
        - name: ID
          in: path
          description: ID улицы
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Streets"
      security:
        - KEY: []
    put:
      tags:
        - streets
      summary: Обновить информацию о улице
      operationId: updateStreet
      parameters:
        - name: ID
          in: path
          description: ID улицы
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Streets"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
      security:
        - KEY: []
  /builds:
    get:
      tags:
        - builds
      summary: Получить дома
      description: Возвращает список домов
      operationId: getBuilds
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildsArray"
      security:
        - KEY: []
    post:
      tags:
        - builds
      summary: Добавление дома
      operationId: addBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Builds"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /builds/{ID}:
    get:
      tags:
        - builds
      summary: Получить информацию о доме
      description: Возвращает дом
      operationId: getBuildInfo
      parameters:
        - name: ID
          in: path
          description: ID дома
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Builds"
      security:
        - KEY: []
    put:
      tags:
        - builds
      summary: Обновить информацию о доме
      operationId: updateBuild
      parameters:
        - name: ID
          in: path
          description: ID дома
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Builds"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
      security:
        - KEY: []
  /payments/types:
    get:
      tags:
        - payments
      summary: Получить список типов оплат
      description: Возвращает список типов оплат
      operationId: getPaymentTypesList
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentTypesArray"
      security:
        - KEY: []
  /payments/users/{UID}:
    get:
      tags:
        - payments
      summary: Получить список оплат пользователя
      description: Возвращает список оплат пользователя
      operationId: getUserPayments
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPaymentsArray"
      security:
        - KEY: []
    post:
      tags:
        - payments
      summary: Добавление оплаты пользователю
      operationId: addUserPayment
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPaymentAdd"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
      security:
        - KEY: []
  /fees/types:
    get:
      tags:
        - fees
      summary: Получить список типов списания
      description: Возвращает список типов списания
      operationId: getFeesTypesList
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeesTypesArray"
      security:
        - KEY: []
  /fees/users/{UID}:
    get:
      tags:
        - fees
      summary: Получить список списаний пользователя
      description: Возвращает список списаний пользователя
      operationId: getUserFees
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFeesArray"
      security:
        - KEY: []
  /fees/users/{UID}/{SUM}:
    post:
      tags:
        - fees
      summary: Добавление списания пользователю
      operationId: addUserFee
      parameters:
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
        - name: SUM
          in: path
          description: Сумма списания
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserFeeAdd"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
      security:
        - KEY: []
  /finance/exchange/rate:
    get:
      tags:
        - finance
      summary: Получить список обменов валют
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeRates'
      security:
        - KEY: [ ]
  /finance/exchange/rate/log:
    get:
      tags:
        - finance
      summary: Получить список истории обменов валют
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeRatesLog'
      security:
        - KEY: [ ]
  /abon/tariffs:
    get:
      tags:
        - abon
      summary: Получить список ТП
      description: Возвращает список ТП
      operationId: getAbonTps
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbonTpsArray"
      security:
        - KEY: []
    post:
      tags:
        - abon
      summary: Добавление ТП
      operationId: addAbonTp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AbonAddTp"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
  /abon/tariffs/{ID}:
    get:
      tags:
        - abon
      summary: Получить информацию о ТП
      description: Возвращает информацию о ТП
      operationId: getAbonTp
      parameters:
        - name: ID
          in: path
          description: ID ТП
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbonTp"
      security:
        - KEY: []
  /abon/tariffs/{ID}/users/{UID}:
    post:
      tags:
        - abon
      summary: Добавление ТП пользователю
      operationId: addAbonTpToUser
      parameters:
        - name: ID
          in: path
          description: ID ТП
          required: true
          schema:
            type: integer
            format: int64
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: []
    delete:
      tags:
        - abon
      summary: Удаление ТП пользователя
      description: Удаление ТП пользователя
      operationId: getUserAbonTps
      parameters:
        - name: ID
          in: path
          description: ID ТП
          required: true
          schema:
            type: integer
            format: int64
        - name: UID
          in: path
          description: UID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content: {}
      security:
        - KEY: []
  /abon/users:
    get:
      tags:
        - abon
      summary: Получить список пользователей Abon
      description: Возвращает список пользователей Abon
      operationId: getUsersAbon
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbonUsersArray"
      security:
        - KEY: []
  /crm/leads:
    post:
      tags:
        - crm
      summary: Добавление потенциального клиента
      operationId: addLead
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmLead"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: [ ]
  /crm/leads/{ID}:
    get:
      tags:
        - crm
      summary: Получить информацию о потенциальном клиенте
      description: Возвращает информацию о лиде
      operationId: getCrmLeadInfo
      parameters:
        - name: ID
          in: path
          description: ID потенциального клиента
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrmLead"
      security:
        - KEY: [ ]
    put:
      tags:
        - crm
      summary: Изменить потенциального клиента
      operationId: crmLeadChange
      parameters:
        - name: ID
          in: path
          required: true
          description: ID потенциального клиента
          schema:
            type: integer
            default: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmLead"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: { }
      security:
        - KEY: [ ]
    delete:
      tags:
        - crm
      summary: Удалить потенциального клиента
      parameters:
        - name: ID
          in: path
          description: ID потенциального клиента
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted
        400:
          description: Нет потенциального клиента с таким id
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31037
                  errstr:
                    type: string
                    example: "Lead not found"
      security:
        - KEY: []
  /crm/leads/:
    get:
      tags:
        - crm
      summary: Список потенциальных клиентов
      operationId: getLeadsList
      parameters:
        - name: leadId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: userLogin
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: fio
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: phone
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: email
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: company
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: responsible
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: adminName
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: source
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: date
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: currentStep
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: address
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: priority
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: comments
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: competitorId
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: tagIds
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: addressFull
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: watcher
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeadsList"
      security:
        - KEY: [ ]
  /crm/action:
    post:
      tags:
        - crm
      summary: Добавление действия
      operationId: addCrmAction
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmAction"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: [ ]
  /crm/action/{ACTION_ID}:
    get:
      tags:
        - crm
      summary: Получить информацию о действии
      operationId: getCrmActionInfo
      parameters:
        - name: ACTION_ID
          in: path
          description: ID действия
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrmAction"
      security:
        - KEY: [ ]
    put:
      tags:
        - crm
      summary: Изменить действие
      operationId: crmActionChange
      parameters:
        - name: ACTION_ID
          in: path
          required: true
          description: ID действия
          schema:
            type: integer
            default: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmAction"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: { }
      security:
        - KEY: [ ]
    delete:
      tags:
        - crm
      summary: Удалить действие
      parameters:
        - name: ACTION_ID
          in: path
          description: ID действия
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted
        400:
          description: Нет действия с таким id
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31037
                  errstr:
                    type: string
                    example: "Action not found"
      security:
        - KEY: []
  /crm/actions/:
    get:
      tags:
        - crm
      summary: Список действий
      operationId: getCrmActionsList
      parameters:
        - name: id
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: name
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: action
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrmActionsList"
      security:
        - KEY: [ ]
  /crm/step:
    post:
      tags:
        - crm
      summary: Добавление шага прогресса
      operationId: addCrmStep
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmStep"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: [ ]
  /crm/step/{STEP_ID}:
    get:
      tags:
        - crm
      summary: Получить информацию о шаге прогресса
      operationId: getCrmStepInfo
      parameters:
        - name: STEP_ID
          in: path
          description: ID шага
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrmStep"
      security:
        - KEY: [ ]
    put:
      tags:
        - crm
      summary: Изменить действие
      operationId: crmStepChange
      parameters:
        - name: STEP_ID
          in: path
          required: true
          description: ID шага
          schema:
            type: integer
            default: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmStep"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: { }
      security:
        - KEY: [ ]
    delete:
      tags:
        - crm
      summary: Удалить шаг
      parameters:
        - name: STEP_ID
          in: path
          description: ID шага
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted
        400:
          description: Нет шага с таким id
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31037
                  errstr:
                    type: string
                    example: "Step not found"
      security:
        - KEY: []
  /crm/steps/:
    get:
      tags:
        - crm
      summary: Список шагов прогресса
      operationId: getCrmStepsList
      parameters:
        - name: id
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: name
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: stepNumber
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: color
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: dealStep
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: description
          in: query
          description: Параметр который возвращает биллинг
          schema:
            type: boolean
            default: false
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrmStepsList"
      security:
        - KEY: [ ]
  /crm/dialogue/{ID}:
    put:
      tags:
        - crm
      summary: Изменить диалог
      operationId: crmDialogueChange
      parameters:
        - name: ID
          in: path
          required: true
          description: ID диалога
          schema:
            type: integer
            default: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmDialogueChangeRequest"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: { }
      security:
        - KEY: [ ]
  /crm/dialogue/{ID}/message:
    post:
      tags:
        - crm
      summary: Добавление и отправка сообщения в диалог
      operationId: addMessageToDialogue
      parameters:
        - name: ID
          in: path
          description: ID диалога
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmDialogueMessage"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: [ ]
    get:
      tags:
        - crm
      summary: Получить список сообщений диалога
      description: Возвращает список сообщений диалога
      operationId: getCrmDialogueMessages
      parameters:
        - name: ID
          in: path
          description: ID диалога
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrmDialogueMessagesArray"
      security:
        - KEY: [ ]
  /crm/sections:
    post:
      tags:
        - crm
      summary: Добавление раздела информации
      operationId: addLeadSection
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmSection"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: [ ]
  /crm/sections/{ID}:
    put:
      tags:
        - crm
      summary: Изменить информацию о разделе
      parameters:
        - name: ID
          in: path
          description: ID раздела
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmSection"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK, successfully changed
        400:
          description: Ошибка изменения данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31019
                  errstr:
                    type: string
                    example: Crm error
      security:
        - KEY: []
    delete:
      tags:
        - crm
      summary: Удалить раздел информации
      parameters:
        - name: ID
          in: path
          description: ID раздела
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted
        400:
          description: Нет раздела с таким id
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31037
                  errstr:
                    type: string
                    example: "Section not found"
      security:
        - KEY: []
  /crm/deals/{ID}:
    put:
      tags:
        - crm
      summary: Изменить сделку
      operationId: crmDealChange
      parameters:
        - name: ID
          in: path
          required: true
          description: ID сделки
          schema:
            type: integer
            default: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmDealChangeRequest"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: { }
      security:
        - KEY: [ ]
  /crm/progressbar/messages:
    post:
      tags:
        - crm
      summary: Добавление сообщение в шкалу прогресса
      operationId: addProgressBarMessage
      requestBody:
        description: Параметры, которые нужно указать
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmProgressMessage"
        required: true
      responses:
        200:
          description: успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSuccessAddResponse"
      security:
        - KEY: [ ]
  /crm/progressbar/messages/{ID}:
    delete:
      tags:
        - crm
      summary: Удалить сообщение из шкалы прогресса
      parameters:
        - name: ID
          in: path
          description: ID сообщения
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted
      security:
        - KEY: []
    put:
      tags:
        - crm
      summary: Изменить сообщение в общем списке коментариев
      operationId: CrmCommentPin
      parameters:
        - name: ID
          in: path
          required: true
          description: ID задачи/коментария
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrmCommentPin"
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: { }
      security:
        - KEY: [ ]
  /online/{UID}:
    get:
      tags:
        - online
      summary: Получить сессии пользователя по UID
      description: Возвращает сессии пользователя
      operationId: getUserSessions
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnlineSessionsArray"
        404:
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - KEY: []
  /version:
    get:
      tags:
        - version
      summary: Получить версии биллинга и API
      operationId: getVersion
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Version"
      security:
        - KEY: []
  /voip/users:
    get:
      tags:
        - voip
      summary: Список пользователей с услугой Voip
      parameters:
        - name: number
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: tpName
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: ip
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: cid
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: serviceStatus
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: filterId
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: simultaneously
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: tpId
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: tpCredit
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: voipExpire
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: voipActivate
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: provisionPort
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: provisionNasId
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: monthFee
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: dayFee
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: abonDistribution
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: extraNumber
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: extraNumbersDayFee
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: extraNumbersMonthFee
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: uid
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VoipUserList"
      security:
        - KEY: []
  /voip/{UID}:
    get:
      tags:
        - voip
      summary: Информация о услуге Voip пользователя
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoipUserInfo"
      security:
        - KEY: []
    post:
      tags:
        - voip
      summary: Добавить услугу Voip пользователю
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoipAddUser"
        required: true
      responses:
        200:
          description: Успешно добавлена услуга пользователю
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
        400:
          description: Невозможно добавить ещё услугу Voip пользователю
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31027
                  errstr:
                    type: string
                    example: Failed add user already has voip service
      security:
        - KEY: []
    put:
      tags:
        - voip
      summary: Изменить услугу Voip пользователю
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoipAddUser"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK, successfully changed tp info for user with uid 103161
        400:
          description: Ошибка изменения данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31019
                  errstr:
                    type: string
                    example: Voip error
      security:
        - KEY: []
    delete:
      tags:
        - voip
      summary: Удалить пользователя Voip
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted
        400:
          description: Нет пользователя Voip
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31037
                  errstr:
                    type: string
                    example: "User with uid 103161 already hasn't got a service"
      security:
        - KEY: []
  /voip/{UID}/tariff:
    put:
      tags:
        - voip
      summary: Изменить Voip тариф пользователю
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoipUserChangeTp"
        required: true
      responses:
        200:
          description: Нет направления
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK, successfully changed tp info for user with uid 103161
        400:
          description: Услуга уже есть у пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 31019
                  errstr:
                    type: string
                    example: Same tpId which already active
      security:
        - KEY: []
    delete:
      tags:
        - voip
      summary: Удалить расписания изменение тарифа пользователя Voip
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted
        400:
          description: Нет расписания на изменения тарифа пользователя Voip
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 30023
                  errstr:
                    type: string
                    example: "No tp change schedule for user with uid 103161"
      security:
        - KEY: []
  /voip/phone/aliases:
    get:
      tags:
        - voip
      summary: Дополнительные номера пользователей
      parameters:
        - name: number
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: disable
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: changed
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: uid
          in: query
          description: UID пользователя в биллинге
          schema:
            type: integer
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VoipPhoneAliase"
      security:
        - KEY: []
  /voip/{UID}/phone/aliases:
    get:
      tags:
        - voip
      summary: Информация о дополнительных номерах
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VoipPhoneAliase"
      security:
        - KEY: []
    post:
      tags:
        - voip
      summary: Добавить номер
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: number
                  example: 05032321312
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "Added phone alias 05032321312 for uid 123321"
        400:
          description: Невозможно добавить номер, он уже привязан
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 30026
                  errstr:
                    type: string
                    example: "Phone alias 05032321312 already has user with uid 123321"
      security:
        - KEY: []
  /voip/{UID}/phone/alias/{ID}:
    delete:
      tags:
        - voip
      summary: Удалить привязанный номер
      parameters:
        - name: UID
          in: path
          description: UID пользователя в биллинге
          required: true
          schema:
            type: integer
        - name: ID
          in: path
          description: ID номера
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: Successfully deleted
        400:
          description: Нет расписания на изменения тарифа пользователя Voip
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 30023
                  errstr:
                    type: string
                    example: "Phone alias with id 123 and user with uid 12321 not exist"
      security:
        - KEY: []
  /voip/tariffs:
    get:
      tags:
        - voip
      summary: Список тарифов Voip
      parameters:
        - name: freeTime
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: timeDivision
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: dayFee
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: monthFee
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: integer
            default: 25
        - name: tpId
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: integer
            default: 25
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VoipTpListInfo"
      security:
        - KEY: []
  /voip/tariff:
    post:
      tags:
        - voip
      summary: Добавить тарифный план Voip
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoipTpAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertTpResponse200"
        400:
          description: Дубликат
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertTpResponse400"
      security:
        - KEY: []
  /voip/tariff/{TP_ID}:
    get:
      tags:
        - voip
      summary: Информация о тарифе Voip
      parameters:
        - name: TP_ID
          in: path
          description: TP_ID Voip тарифа
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoipTpInfo"
      security:
        - KEY: []
    put:
      tags:
        - voip
      summary: Изменить тариф Voip
      parameters:
        - name: TP_ID
          in: path
          description: TP_ID Voip тарифа
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoipTpAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeResponse200"
      security:
        - KEY: []
    delete:
      tags:
        - voip
      summary: Удалить тариф Voip
      parameters:
        - name: TP_ID
          in: path
          description: TP_ID Voip тарифа
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeResponse200"
        400:
          description: Нет тарифа
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 30004
                  errstr:
                    type: string
                    example: tpId 8 not exists
      security:
        - KEY: []
  /voip/trunks:
    get:
      tags:
        - voip
      summary: Список транков
      parameters:
        - name: failoverTrunk
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: id
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: name
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: protocol
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: number
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VoipTrunk"
      security:
        - KEY: []
  /voip/trunks/protocols:
    get:
      tags:
        - voip
      summary: Список доступных протоколов
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: SIP
      security:
        - KEY: []
  /voip/trunk:
    post:
      tags:
        - voip
      summary: Добавить транк
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrunkAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse200"
        400:
          description: Дубликат
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse400"
      security:
        - KEY: []
  /voip/trunks/{ID}:
    get:
      tags:
        - voip
      summary: Информация о транке
      parameters:
        - name: ID
          in: path
          description: ID транка
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoipTrunkInfo"
      security:
        - KEY: []
    put:
      tags:
        - voip
      summary: Изменить транк
      parameters:
        - name: ID
          in: path
          description: ID транка
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TrunkAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeResponse200"
        400:
          description: Дубликат
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse400"
      security:
        - KEY: []
    delete:
      tags:
        - voip
      summary: Удалить транк
      parameters:
        - name: ID
          in: path
          description: ID транка
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeResponse200"
        400:
          description: Нет транка
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 30010
                  errstr:
                    type: string
                    example: trunk id 8 not exists
      security:
        - KEY: []
  /voip/extra/tarifications:
    get:
      tags:
        - voip
      summary: Список дополнительных тарификаций
      parameters:
        - name: id
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: name
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtraTarificationInfo"
      security:
        - KEY: []
  /voip/extra/tarification:
    post:
      tags:
        - voip
      summary: Добавить тарификацию
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtraTarificationAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse200"
        400:
          description: Дубликат
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse400"
      security:
        - KEY: []
  /voip/extra/tarification/{ID}:
    get:
      tags:
        - voip
      summary: Информация тарификации
      parameters:
        - name: ID
          in: path
          description: ID тарификации
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtraTarificationInfo"
      security:
        - KEY: []
    put:
      tags:
        - voip
      summary: Изменить тарификацию
      parameters:
        - name: ID
          in: path
          description: ID тарификации
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtraTarificationAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeResponse200"
        400:
          description: Дубликат
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse400"
      security:
        - KEY: []
    delete:
      tags:
        - voip
      summary: Удалить тарификацию
      parameters:
        - name: ID
          in: path
          description: ID тарификации
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeResponse200"
        400:
          description: Нет тарификации
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 30010
                  errstr:
                    type: string
                    example: trunk id 8 not exists
      security:
        - KEY: []
  /voip/routes:
    get:
      tags:
        - voip
      summary: Направления звонков
      parameters:
        - name: route
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: describe
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: prefix
          in: query
          description: Параметр который возвращает биллинг, а также поиск по нему, если не поле не пустое
          schema:
            type: string
        - name: pageRows
          in: query
          description: Количество записей
          schema:
            type: integer
            default: 25
        - name: sort
          in: query
          description: Сортировка по одному параметру выше
          schema:
            type: string
        - name: pg
          in: query
          description: Рабоатет вместе с pageRows, параметр отвечает с какой записи начинать возвращать в запросе
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RouteInfo"
      security:
        - KEY: []
  /voip/route:
    post:
      tags:
        - voip
      summary: Добавить направление
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RouteAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse200"
        400:
          description: Дубликат
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse400"
      security:
        - KEY: []
  /voip/route/{ID}:
    get:
      tags:
        - voip
      summary: Информация о напрвлении
      parameters:
        - name: ID
          in: path
          description: ID напрявления
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteInfo"
      security:
        - KEY: []
    put:
      tags:
        - voip
      summary: Изменить направление
      parameters:
        - name: ID
          in: path
          description: ID напрвления
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RouteAddRequest"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeResponse200"
        400:
          description: Дубликат
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse400"
      security:
        - KEY: []
    delete:
      tags:
        - voip
      summary: Удалить напрявление
      parameters:
        - name: ID
          in: path
          description: ID напрвления
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeResponse200"
        400:
          description: Нет направления
          content:
            application/json:
              schema:
                type: object
                properties:
                  errno:
                    type: integer
                    example: 30010
                  errstr:
                    type: string
                    example: routeId 8 not exists
      security:
        - KEY: []
  /cablecat/attachment:
    post:
      tags:
        - cablecat
      summary: Добавить файл
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CablecatAttachment"
        required: true
      responses:
        200:
          description: Успешное выполнение
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertResponse200"
      security:
        - KEY: []
components:
  schemas:
    User:
      type: object
      properties:
        login:
          type: string
          example: testUser
        password:
          type: string
          example: "123456"
        createBill:
          type: integer
    UserPi:
      type: object
      properties:
        fio:
          type: string
          description: Фамилия
          example: Петренко
        fio2:
          type: string
          description: Имя
          example: Иван
        fio3:
          type: string
          description: Отчество
          example: Петрович
        comments:
          type: string
        email:
          type: string
        phone:
          type: string
    UserContactAdd:
      type: object
      properties:
        value:
          type: string
          description: Контакт - email, телефон
          example: 1234567889
        typeId:
          type: integer
          description: Вид контакта
          example: 2
        priority:
          type: integer
          description: Приоритет
          example: 1
    UserCreated:
      type: object
      properties:
        preAdd:
          type: integer
          example: 1
        total:
          type: integer
          example: 0
        insertId:
          type: string
          example: "17"
        uid:
          type: string
          example: "32"
        affected:
          type: integer
          example: 1
        login:
          type: string
          example: testUser
    UserInternetList:
      type: array
      items:
        $ref: "#/components/schemas/UserInternetList_inner"
    UserInternet:
      type: object
      properties:
        tpId:
          type: integer
          example: 41
        cid:
          type: string
          example: 14:11:11:11:11:c1
        activate:
          type: string
          example: "0000-00-00"
        expire:
          type: string
          example: "0000-00-00"
    UserInternetActivate:
      type: object
      properties:
        tpId:
          type: integer
          example: 41
        status:
          type: integer
          example: 1
          default: 0
        cid:
          type: string
          example: 14:11:11:11:11:c1
        serviceExpire:
          type: string
          example: "0000-00-00"
          default: "0000-00-00"
        serviceActivate:
          type: string
          example: "0000-00-00"
          default: "0000-00-00"
        statusDays:
          type: string
          default: ""
        personalTp:
          type: integer
          default: 0
        comments:
          type: string
          example: Абонент попросил 2 услугу
          default: ""
        staticIpPool:
          type: string
          default: ""
        port:
          type: integer
          default: 0
        nasId:
          type: integer
          default: 0
        serverVlan:
          type: string
          default: ""
        vlan:
          type: integer
          default: 0
        ipv6Mask:
          type: integer
          default: 32
        ivp6:
          type: string
          default: "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
        ipv6Prefix:
          type: integer
        ipv6PrefixMask:
          type: integer
          default: 32
        staticIpv6Pool:
          type: string
          default: ""
    UserInternetChange:
      type: object
      properties:
        id:
          type: integer
          example: 41
        status:
          type: integer
          example: 1
          default: 0
        cid:
          type: string
          example: 14:11:11:11:11:c1
        serviceExpire:
          type: string
          example: "0000-00-00"
          default: "0000-00-00"
        serviceActivate:
          type: string
          example: "0000-00-00"
          default: "0000-00-00"
        statusDays:
          type: string
          default: ""
        personalTp:
          type: integer
          default: 0
        comments:
          type: string
          example: Абонент попросил 2 услугу
          default: ""
        staticIpPool:
          type: string
          default: ""
        port:
          type: integer
          default: 0
        nasId:
          type: integer
          default: 0
        serverVlan:
          type: string
          default: ""
        vlan:
          type: integer
          default: 0
        ipv6Mask:
          type: integer
          default: 32
        ivp6:
          type: string
          default: "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
        ipv6Prefix:
          type: integer
        ipv6PrefixMask:
          type: integer
          default: 32
        staticIpv6Pool:
          type: string
          default: ""
    UserIptvList:
      type: array
      items:
        $ref: "#/components/schemas/UserIptvList_inner"
    Contacts:
      type: object
      properties:
        value:
          type: string
          example: test@gmail.com
        type:
          type: string
          description: _SHOW - отобразить поле
          example: _SHOW
        typeName:
          type: string
          example: _SHOW
    ContactsArray:
      type: array
      items:
        $ref: "#/components/schemas/ContactsArray_inner"
    Tp:
      type: object
      properties:
        id:
          type: integer
          example: 2
        tpId:
          type: integer
          example: 83
        dayFee:
          type: integer
        monthFee:
          type: integer
        module:
          type: string
          example: Internet
        changePrice:
          type: integer
        activPrice:
          type: integer
        serviceId:
          type: integer
        status:
          type: integer
    TpIntervals:
      type: array
      items:
        $ref: "#/components/schemas/TpIntervals_inner"
    Groups:
      type: array
      items:
        $ref: "#/components/schemas/Groups_inner"
    Msgs:
      type: object
      properties:
        uid:
          type: integer
          example: 11135
        chapter:
          type: integer
          example: 2
        message:
          type: string
          example: Test message
        state:
          type: integer
          example: 0
        subject:
          type: string
          example: Message subject
        priority:
          type: integer
          example: 2
    MsgsReply:
      type: object
      properties:
        aid:
          type: integer
          example: 2
        replyText:
          type: string
          example: Reply text
    MsgsWorkflow:
      type: object
      properties:
        name:
          type: string
          example: Test name
        descr:
          type: string
          example: Some descr
        disable:
          type: integer
          example: 0
    MsgsRepliesList:
      type: array
      items:
        $ref: "#/components/schemas/MsgsRepliesList_inner"
    MsgsReplyAttachment:
      type: object
      properties:
        filename:
          type: string
          example: Test.txt
        filesize:
          type: integer
          example: 12
        content:
          type: string
          example: "  Test content"
        contentType:
          type: string
          example: text/plain
        messageType:
          type: integer
          example: 1
    MsgsChapter:
      type: array
      items:
        $ref: "#/components/schemas/MsgsChapter_inner"
    CrmDialogueMessage:
      type: object
      properties:
        message:
          type: string
          example: Some message to lead
    CrmLead:
      type: object
      properties:
        fio:
          type: string
          example: Shevchenko Taras
        phone:
          type: string
          example: 0999999999
        email:
          type: string
          example: email@gmail.com
        responsible:
          type: integer
          example: 5
        currentStep:
          type: integer
          example: 2
        comments:
          type: string
          example: some comment
    CrmAction:
      type: object
      properties:
        name:
          type: string
          example: Some name
        action:
          type: string
          example: action description
    CrmStep:
      type: object
      properties:
        name:
          type: string
          example: Some name
        stepNumber:
          type: integer
          example: 1
        color:
          type: string
          example: some color
        dealStep:
          type: integer
          example: 0
        description:
          type: string
          example: some description
    CrmSection:
      type: object
      properties:
        aid:
          type: integer
          example: 0
        title:
          type: string
          example: main info
    CrmDialogueChangeRequest:
      type: object
      properties:
        aid:
          type: integer
          example: 1
        state:
          type: integer
          example: 0
        date:
          type: string
          example: "2022-12-01 20:12"
        source:
          type: string
          example: facebook
        lead_id:
          type: integer
          example: 12
    CrmDealChangeRequest:
      type: object
      properties:
        uid:
          type: integer
          example: 1
        aid:
          type: integer
          example: 1
        name:
          type: string
          example: Some name
        current_step:
          type: integer
          example: 1
        date:
          type: string
          example: "2022-12-01 20:12"
        begin_date:
          type: string
          example: "2022-12-01 20:12"
        closed_date:
          type: string
          example: "2022-12-01 20:12"
        comments:
          type: string
          example: comment
    CrmProgressMessage:
      type: object
      properties:
        id:
          type: integer
          example: 1
        step_id:
          type: integer
          example: 1
        lead_id:
          type: integer
          example: 1
        deal_id:
          type: integer
          example: 0
        message:
          type: string
          example: Some message
        date:
          type: string
          example: "2022-12-01 20:12"
        action_id:
          type: integer
          example: 1
        status:
          type: integer
          example: 1
        aid:
          type: integer
          example: 1
        priority:
          type: integer
          example: 2
        planned_date:
          type: string
          example: "2022-12-01 20:12"
    CrmDialogueMessagesArray:
      type: array
      items:
        $ref: "#/components/schemas/CrmDialogueMessagesArray_inner"
    CrmDialogueMessagesArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 1
        message:
          type: string
          example: Some message
        dialogue_id:
          type: integer
          example: 16
        day:
          type: string
          example: "2021-08-11"
        date:
          type: string
          example: "2021-08-11 20:30"
        aid:
          type: integer
          example: 1
    Districts:
      type: object
      properties:
        name:
          type: string
          example: пос.Зуевка
        city:
          type: string
          example: Харцызск
        zip:
          type: string
    DistrictsArray:
      type: array
      items:
        $ref: "#/components/schemas/DistrictsArray_inner"
    Streets:
      type: object
      properties:
        name:
          type: string
          example: ул.Цэемовская
        districtId:
          type: integer
          example: 2
        secondName:
          type: string
    StreetsArray:
      type: array
      items:
        $ref: "#/components/schemas/StreetsArray_inner"
    Builds:
      type: object
      properties:
        streetId:
          type: integer
          example: 2
        number:
          type: string
    BuildsArray:
      type: array
      items:
        $ref: "#/components/schemas/BuildsArray_inner"
    PaymentTypesArray:
      type: array
      items:
        $ref: "#/components/schemas/PaymentTypesArray_inner"
    UserPaymentsArray:
      type: array
      items:
        $ref: "#/components/schemas/UserPaymentsArray_inner"
    UserPaymentAdd:
      type: object
      required: [sum, billId]
      properties:
        sum:
          type: integer
          example: 1.15
          description: сумма пополнения
        method:
          type: integer
          example: 1
          description: платежный метод
        billId:
          type: integer
          example: 10
          description: денежный счет
        describe:
          type: string
          example: Test payment
          description: описание - видно пользователю!
        innerDescribe:
          type: string
          example: this client is pig
          description: внутренное описание
        date:
          type: string
          example: "2021-12-01"
          description: Если нужно платеж зарегистрировать задним числом
        exchangeId:
          type: integer
          example: 1
          description: id курса
        cashboxId:
          type: integer
          example: 1
          description: id кассы, работает если включен модуль Employees
        createReceipt:
          type: integer
          example: 1
          description: cоздать счет, работает если включен модуль Docs
        applyToInvoice:
          type: integer
          example: 1
          description: привязать invoice, работает если включен модуль Docs
          default: 1
        extId:
          type: string
          example: "Liqpay:12345"
          description: id транзакции
    FeesTypesArray:
      type: array
      items:
        $ref: "#/components/schemas/FeesTypesArray_inner"
    UserFeesArray:
      type: array
      items:
        $ref: "#/components/schemas/UserFeesArray_inner"
    UserFeeAdd:
      type: object
      properties:
        method:
          type: integer
          example: 6
        billId:
          type: integer
          example: 10
        describe:
          type: string
    AbonTpsArray:
      type: array
      items:
        $ref: "#/components/schemas/AbonTpsArray_inner"
    AbonAddTp:
      type: object
      properties:
        price:
          type: integer
          example: 100
        period:
          type: integer
          example: 1
        name:
          type: string
          example: Test abon TP
        description:
          type: string
          example: Test description
    AbonTp:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Test abon TP
        price:
          type: integer
          example: 100
        userPortal:
          type: integer
          example: 0
        userCount:
          type: integer
          example: 10
        discount:
          type: integer
          example: 0
        paymentType:
          type: integer
          example: 0
        periodAlignment:
          type: integer
          example: 1
        nextAbonDate:
          type: string
          example: "2021-10-01"
        description:
          type: string
    AbonUsersArray:
      type: array
      items:
        $ref: "#/components/schemas/AbonUsersArray_inner"
    OnlineSessionsArray:
      type: array
      items:
        $ref: "#/components/schemas/OnlineSessionsArray_inner"
    Version:
      type: object
      properties:
        version:
          type: string
          example: 0.91.0
        apiVersion:
          type: string
          example: "0.01"
        billing:
          type: string
          example: demo
    ApiResponse:
      type: object
      properties:
        errstr:
          type: string
          example: ERROR_NOT_EXIST
        errno:
          type: integer
          example: 2
    ApiSuccessAddResponse:
      type: object
      properties:
        total:
          type: integer
          example: 0
        affected:
          type: integer
          example: 1
        insertId:
          type: integer
          example: 37
    UserLogin:
      type: object
      properties:
        login:
          type: string
          example: testuser
        password:
          type: string
          example: testuser
    inline_response_200:
      type: object
      properties:
        login:
          type: string
          example: testuser
        sid:
          type: string
          example: sW44EJZLyWDMeXAV
        uid:
          type: string
          example: "5690"
    UserInternetList_inner:
      type: object
      properties:
        id:
          type: integer
          example: 2
        tpName:
          type: string
          example: Премиум до 100м
        tpId:
          type: integer
          example: 41
        internetStatus:
          type: integer
          example: 0
        cid:
          type: string
          example: 14:11:11:11:11:c1
        monthFee:
          type: integer
          example: 250
        dayFee:
          type: integer
          example: 0
    UserIptvList_inner:
      type: object
      properties:
        id:
          type: integer
          example: 2
        tpName:
          type: string
          example: Премиум Iptvportal
        tpId:
          type: integer
          example: 41
        serviceStatus:
          type: integer
          example: 0
        monthFee:
          type: integer
          example: 250
        dayFee:
          type: integer
          example: 0
        serviceId:
          type: integer
          example: 0
        subscribeId:
          type: integer
          example: 0
        filterId:
          type: integer
          example: 0
    ContactsArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uid:
          type: string
          example: "132"
        value:
          type: string
          example: test@gmail.com
        typeName:
          type: string
          example: Email
    TpIntervals_inner:
      type: object
      properties:
        begin:
          type: string
          example: 00:00:00
        end:
          type: string
          example: 23:59:59
        id:
          type: integer
          example: 2
        tarif:
          type: string
        trafficClasses:
          type: string
        day:
          type: integer
    Groups_inner:
      type: object
      properties:
        id:
          type: integer
          example: 53
        name:
          type: string
          example: Должники
        descr:
          type: string
        domainId:
          type: integer
        disableChgTp:
          type: integer
          example: 1
    MsgsRepliesList_inner:
      type: object
      properties:
        id:
          type: integer
          example: 2
        text:
          type: string
          example: Reply text
        aid:
          type: integer
          example: 2
        admin:
          type: string
          example: demo
        datetime:
          type: string
          example: "2021-08-09 13:25:41"
        mainMsg:
          type: integer
          example: 40
    MsgsChapter_inner:
      type: object
      properties:
        id:
          type: integer
          example: 2
        name:
          type: string
          example: Первый раздел
        responsible:
          type: integer
          example: 1
        innerChapter:
          type: integer
          example: 0
        autoclose:
          type: integer
          example: 50
    DistrictsArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: пос.Зуевка
        city:
          type: string
          example: Харцызск
        zip:
          type: string
        streetCount:
          type: integer
          example: 31
    StreetsArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 10
        streetName:
          type: string
          example: ул.Цэемовская
        districtId:
          type: integer
          example: 2
        buildCount:
          type: integer
          example: 31
    BuildsArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 10
        streetName:
          type: string
          example: ул.Цэемовская
        streetId:
          type: integer
          example: 2
        number:
          type: string
          example: "31"
    PaymentTypesArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: Credit card
        feesType:
          type: integer
          example: 0
        color:
          type: string
    UserPaymentsArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 10
        sum:
          type: integer
          example: 500
        regDate:
          type: string
          example: "2021-07-02 07:46:01"
        method:
          type: integer
          example: 6
        innerDescribe:
          type: string
    FeesTypesArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: Пеня
        sum:
          type: integer
          example: 500
        defaultDescribe:
          type: string
    UserFeesArray_inner:
      type: object
      properties:
        id:
          type: integer
          example: 10
        sum:
          type: integer
          example: 500
        regDate:
          type: string
          example: "2021-07-02 07:46:01"
        method:
          type: integer
          example: 2
        dsc:
          type: string
          example: "Internet: М/А Премиум до 100м (41) - Распределение абонплаты"
    AbonTpsArray_inner:
      type: object
      properties:
        tpId:
          type: integer
          example: 1
        name:
          type: string
          example: Test abon TP
        price:
          type: integer
          example: 100
        userPortal:
          type: integer
          example: 0
        userCount:
          type: integer
          example: 10
        discount:
          type: integer
          example: 0
        paymentType:
          type: integer
          example: 0
        periodAlignment:
          type: integer
          example: 1
        nextAbonDate:
          type: string
          example: "2021-10-01"
        description:
          type: string
    AbonUsersArray_inner:
      type: object
      properties:
        tpId:
          type: integer
          example: 1
        tpName:
          type: string
          example: Test abon TP
        price:
          type: integer
          example: 100
        serviceCount:
          type: integer
          example: 1
        date:
          type: string
          example: "2021-08-11"
        nextAbon:
          type: string
          example: "2021-09-01"
        uid:
          type: integer
          example: 11135
        login:
          type: string
          example: "3433"
    OnlineSessionsArray_inner:
      type: object
      properties:
        clientIpNum:
          type: integer
          example: 3232238092
        nasId:
          type: integer
          example: 12
        duration:
          type: string
          example: 838:59:59
        status:
          type: integer
          example: 10
        userName:
          type: string
          example: userName
        clientIp:
          type: string
          example: 192.168.10.12
        acctSessionId:
          type: string
          example: Akie6VpiYU
    OnuList:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
            example: 3
          dhcpPort:
            type: string
            example: 0/01/3/002
          nasId:
            type: number
            example: 17
          onuId:
            type: number
            example: 2
          onuSnmpId:
            type: number
            example: 268501760
          ponType:
            type: string
            example: gpon
          snmpId:
            type: number
            example: 268501760
          vlan:
            type: number
            example: 0
    LeadsList:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
            example: 3
          fio:
            type: string
            example: Some Fio
          email:
            type: string
            example: somemail@gmail.com
          currentStep:
            type: number
            example: 2
          comments:
            type: string
            example: comment
    CrmActionsList:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
            example: 3
          name:
            type: string
            example: Some name
          action:
            type: string
            example: some action description
    CrmStepsList:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
            example: 3
          name:
            type: string
            example: Some name
          stepNumber:
            type: integer
            example: 1
          color:
            type: string
            example: some color
          dealStep:
            type: integer
            example: 0
          description:
            type: string
            example: somde description
    NasListExtra:
      type: array
      items:
        type: object
        properties:
          disable:
            type: integer
            format: int32
            example: 0
          id:
            type: integer
            format: int32
            example: 200
          mac:
            type: string
            example: B6:E6:3D:BD:13:F3
          modelId:
            type: integer
            format: int32
            example: 200
          nasAlive:
            type: integer
            format: int32
            example: 0
          nasId:
            type: integer
            format: int32
            example: 3
          nasIp:
            type: string
            example: 10.1.0.15
          nasType:
            type: string
            example: eltex
          vendorId:
            type: integer
            format: int32
            example: 1
          vendorName:
            type: string
            example: Cisco
    OltList:
      type: array
      items:
        type: object
        properties:
          id:
            type: number
            example: 3
          marking:
            type: string
            example: example
          datetime:
            type: string
            example: 2020-12-01 12:14:12
          serial:
            type: string
            example: example
    NasGroupsList:
      type: array
      items:
        type: object
        properties:
          comments:
            type: string
            example: Hello world
          disable:
            type: number
            example: 0
          gid:
            type: number
            example: 26
          id:
            type: number
            example: 26
          name:
            type: string
            example: test api
    NasList:
      type: array
      items:
        type: object
        properties:
          authType:
            type: number
            example: 0
          descr:
            type: string
            example: 000
          extAcct:
            type: number
            example: 0
          id:
            type: number
            example: 3
          mac:
            type: string
            example: B6:E6:3D:BD:13:F3
          nasAlive:
            type: number
            example: 0
          nasDisable:
            type: number
            example: 0
          nasGroupName:
            type: string
            example: ""
          nasId:
            type: number
            example: 3
          nasIdentifier:
            type: string
            example: ""
          nasIp:
            type: string
            example: 10.1.0.15
          nasMngIpPort:
            type: string
            example: ":::"
          nasMngPassword:
            type: string
            example: ""
          nasMngUser:
            type: string
            example: ""
          nasName:
            type: string
            example: Asterisk
          nasRadPairs:
            type: string
            example: ERX-Service-Activate:1+='svc-global-pppoe(15242880
    UserList:
      type: array
      items:
        type: object
        properties:
          deposit:
            type: number
            example: 36579.21
          fio:
            type: string
            example: Иванов Иван
          uid:
            type: integer
            example: 1
          gid:
            type: integer
            example: 1
          login:
            type: string
            example: testuser
          billId:
            type: integer
            example: 12
    NasIpPools:
      type: array
      items:
        type: object
        properties:
          activeNasId:
            type: number
            example: 0
          comments:
            type: string
            example: ""
          dns:
            type: string
            example: 8.8.8.89.9.9.9
          firstIp:
            type: string
            example: 192.168.5.2
          gateway:
            type: number
            example: 3232236801
          guest:
            type: number
            example: 0
          id:
            type: number
            example: 61
          ip:
            type: number
            example: 3232236802
          ipCount:
            type: number
            example: 21
          ipSkip:
            type: string
            example: 192.168.5.13
          ipv6Mask:
            type: number
            example: 64
          ipv6Pd:
            type: string
            example: "2001:db8::"
          ipv6PdMask:
            type: number
            example: 64
          ipv6PdTemp:
            type: string
            example:
          ipv6Prefix:
            type: string
            example: "2001:2:1:a::"
          ipv6Temp:
            type: string
            example:
          lastIp:
            type: string
            example: 192.168.5.22
          lastIpNum:
            type: number
            example: 3232236822
          name:
            type: string
            example: test123
          nasId:
            type: string
            example:
          nasName:
            type: string
            example:
          netmask:
            type: number
            example: 4294967280
          nextPool:
            type: number
            example: 0
          poolName:
            type: string
            example: test123
          priority:
            type: number
            example: 0
          speed:
            type: number
            example: 0
          static:
            type: number
            example: 0
          vlan:
            type: number
            example: 0
    UreportsUserList:
      type: array
      items:
        type: object
        properties:
          destination:
            type: string
            example: ''
          reportsCount:
            type: number
            example: 0
          status:
            type: number
            example: 0
          tpId:
            type: number
            example: 31
          tpName:
            type: string
            example: test
          type:
            type: number
            example: 1
          uid:
            type: number
            example: 6922
    NasTypesList:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: cisco_isg
          name:
            type: string
            example: Cisco ISG
    NasRequest:
      type: object
      properties:
        nasName:
          type: number
          example: Asterik
        ip:
          type: string
          example: 0.0.0.0
        nasIdentifier:
          type: string
          example: openbts_1111
        nasDescribe:
          type: string
          example: test nas
        nasType:
          type: string
          example: asterisk
        nasAuthType:
          type: number
          example: 1
        nasMngIpPort:
          type: string
          example: 10.11.0.1:3799:22
        nasMngUser:
          type: string
          example: demo
        nasMngPassword:
          type: string
          example: test
        nasRadPairs:
          type: string
          example: ERX-Service-Activate:1+='svc-global-pppoe(15242880, 15242880)',
        nasAlive:
          type: number
          example: 300
        nasDisable:
          type: number
          example: 0
        nasExtAcct:
          type: number
          example: 0
        addressBuild:
          type: string
          example: 10
        addressFlat:
          type: string
          example: 1
        addressStreet:
          type: string
          example: 2
        locationId:
          type: number
          example: 1
        floor:
          type: number
          example: 1
        zip:
          type: string
          example: ""
        city:
          type: string
          example: Lviv
        country:
          type: number
          example: 1
        gid:
          type: number
          example: 2
        mac:
          type: string
          example: B6:E6:3D:BD:13:F3
        changed:
          type: string
          example: "2022-06-16 16:19:18"
        extrance:
          type: string
          example: ""
        zabbixHostid:
          type: integer
          example: 0
    NasChangeResponse:
      type: object
      properties:
        addressBuild:
          type: string
          example: 3
        addressFlat:
          type: string
          example: 2
        addressStreet:
          type: string
          example: 1
        affected:
          type: integer
          example: 0
        alive:
          type: integer
          example: 0
        authType:
          type: integer
          example: 0
        changed:
          type: string
          example: "2022-08-31 21:43:18"
        changesLog:
          type: string
          example: NAS_ID:250 NAS_TYPE accel_ppp->asterik;NAS_NAME joao->tester;IP 3373547590->201.20.64.70
        city:
          type: string
          example: ""
        country:
          type: integer
          example: ""
        descr:
          type: string
          example: test
        disable:
          type: integer
          example: 0
        domainId:
          type: integer
          example: 0
        entrance:
          type: string
          example: ""
        extAcct:
          type: integer
          example: 0
        floor:
          type: string
          example: 1
        gid:
          type: integer
          example: 0
        id:
          type: integer
          example: 250
        ip:
          type: integer
          example: 3373547590
        locationId:
          type: integer
          example: 0
        mac:
          type: string
          example: ""
        mngHostPort:
          type: string
          example: "::::"
        mngPassword:
          type: string
          example: ""
        mngUser:
          type: string
          example: ""
        name:
          type: string
          example: tester
        nasAlive:
          type: integer
          example: 0
        nasAuthType:
          type: integer
          example: 0
        nasDescribe:
          type: string
          example: test nas
        nasDisable:
          type: integer
          example: 0
        nasExtAcct:
          type: integer
          format: int32
          example: 0
        nasId:
          type: integer
          example: 250
        nasIdentifier:
          type: string
          example: openbts_1111
        nasIp:
          type: string
          example: 201.20.64.70
        nasMngIpPort:
          type: string
          example: ":::"
        nasMngPassword:
          type: string
          example: ""
        nasMngUser:
          type: string
          example: ""
        nasName:
          type: string
          example: tester
        nasRadPairs:
          type: string
          example: "ERX-Service-Activate:1+='svc-global-pppoe(15242880, 15242880)',"
        nasType:
          type: string
          example: asterik
        radPairs:
          type: string
          example: "ERX-Service-Activate:1+='svc-global-pppoe(15242880, 15242880)',"
        total:
          type: integer
          example: 1
        zabbixHostid:
          type: integer
          example: 0
        zip:
          type: string
          example: ""
    UreportsUserRequest:
      type: object
      properties:
        tpId:
          type: number
          example: 1
        type:
          type: string
          example: '10, 2'
        status:
          type: number
          example: 0
        destination1:
          type: number
          example: 1
        destination2:
          type: number
          example: 1
        destinationX:
          type: number
          example: 1
        reports:
          type: object
          properties:
            value1:
              type: number
              example: 1
            value2:
              type: number
              example: 1
            valueX:
              type: number
              example: 1
    UreportsAddUserResponse:
      type: object
      properties:
        userAddResult:
          type: string
          example: OK
        reportsAddResult:
          type: string
          example: OK
    UreportsChangeUserResponse:
      type: object
      properties:
        userChangeResult:
          type: string
          example: OK
        reportsAddResult:
          type: string
          example: OK
    NasGroupAddResponse200:
      type: object
      properties:
        affected:
          type: integer
          format: int32
          example: 1
        insertId:
          type: integer
          format: int32
          example: 253
        total:
          type: integer
          format: int32
          example: 0
    NasAddResponse200:
      type: object
      properties:
        affected:
          type: integer
          format: int32
          example: 1
        insertId:
          type: integer
          format: int32
          example: 253
        nasId:
          type: integer
          format: int32
          example: 253
        total:
          type: integer
          format: int32
          example: 0
    NasGroupChangeResponse200:
      type: object
      properties:
        affected:
          type: number
          example: 0
        changesLog:
          type: string
          example: "NAS_GROUP_ID: NAME test ap->test api1;COMMENTS Hello world->Hello world1"
        comments:
          type: string
          example: Hello world1
        default:
          type: number
          example: 0
        disable:
          type: number
          example: 0
        domainId:
          type: number
          example: 0
        id:
          type: number
          example: 28
        mainPage:
          type: string
          example:
        name:
          type: string
          example: test api1
        total:
          type: number
          example: 1
    NasAddResponse400:
      type: object
      properties:
        affected:
          type: string
          example:
        nasId:
          type: string
          example:
        total:
          type: integer
          format: int32
          example: 0
        errno:
          type: integer
          format: int32
          example: 7
        errstr:
          type: string
          example: ERROR_DUPLICATE
    InternetWarnings:
      type: object
      properties:
        messageType:
          type: string
          example: success
        warning:
          type: string
          example: следующее списание через 7 дней
        daysToFee:
          type: string
          example: "2"
        sum:
          type: integer
          example: 150
        abonDate:
          type: string
          example: "2021-10-01"
    UsedPorts:
      type: object
      properties:
        5c:F4:Ab:C6:Db:De:
          type: array
          items:
            type: object
            properties:
              nasMngPassword:
                type: string
                example: ""
              authType:
                type: integer
                example: 1
              nasName:
                type: string
                example: zyxel_lab
              nasDisable:
                type: integer
                example: 0
              id:
                type: integer
                example: 100
              ip:
                type: string
                example: "172.17.0.2"
              disable:
                type: integer
                example: 0
              nasIp:
                type: string
                example: "172.17.0.2"
              nasId:
                type: number
                example: 100
              nasAlive:
                type: number
                example: 0
              mac:
                type: string
                example: 5c:f4:ab:c6:db:de
              nasType:
                type: string
                example: dhcp
              nasRadPairs:
                type: string
                example: ""
    AdminInfo:
      type: object
      properties:
        address:
          type: string
          example: ''
        adminAccess:
          type: number
          example: 0
        affected:
          type: number
          example: 0
        aid:
          type: number
          example: 98
        apiKey:
          type: string
          example: ''
        avatarLink:
          type: string
          example: ''
        aFio:
          type: string
          example: Admin Test Info
        aLogin:
          type: string
          example: MinorAdmin
        birthday:
          type: string
          example: "0000-00-00"
        cellPhone:
          type: string
          example: ''
        comments:
          type: string
          example: Test admins
        creditDays:
          type: number
          example: 0
        department:
          type: number
          example: 0
        disable:
          type: number
          example: 0
        domainId:
          type: number
          example: 0
        domainName:
          type: string
          example: ''
        email:
          type: string
          example: test@gmail.com
        expire:
          type: string
          example: "2022-09-23 10:08:40"
        fullLog:
          type: number
          example: 0
        g2fa:
          type: string
          example: ''
        gid:
          type: number
          example: 0
        gpsImei:
          type: string
          example: ''
        inn:
          type: string
          example: ''
        maxCredit:
          type: number
          example: 0
        maxRows:
          type: number
          example: 0
        minSearchChars:
          type: number
          example: 0
        pasportDate:
          type: string
          example: "0000-00-00"
        pasportGrant:
          type: string
          example: ''
        pasportNum:
          type: string
          example: ''
        phone:
          type: string
          example: ''
        position:
          type: number
          example: 0
        regdate:
          type: string
          format: date
          example: "2022-09-23"
        rfidNumber:
          type: string
          example: ''
        sessionIp:
          type: string
          example: 0.0.0.0
        sipNumber:
          type: string
          example: ''
        startWork:
          type: string
          example: "0000-00-00"
        telegramId:
          type: string
          example: ''
        total:
          type: number
          example: 1
        webOptions:
          type: string
          example: ''
    AdminSetPermissionsRequest:
      type: object
      properties:
        0:
          type: object
          properties:
            0:
              type: number
              example: 1
            1:
              type: number
              example: 1
            3:
              type: number
              example: 1
        9:
          type: object
          properties:
            1_Msgs:
              type: number
              example: 1
            1_Abon:
              type: number
              example: 1
    AdminSetPermissionsResponse:
      type: object
      properties:
        aid:
          type: number
          example: 98
        result:
          type: string
          example: Permissions successfully set
    AdminAddRequest:
      type: object
      properties:
        aLogin:
          type: string
          example: TestApi
        aFio:
          type: string
          example: Test admin API
        passportGrant:
          type: string
          example: ''
        birthday:
          type: string
          format: date
          example: 1999-12-31
        gid:
          type: number
          example: 0
        rfidNumber:
          type: string
          example: ''
        minSearchChars:
          type: number
          example: 0
        email:
          type: string
          example: test@gmail.com
        cellPhone:
          type: string
          example: +38050938122960
        passportDate:
          type: string
          format: date
          example: 2017-12-31
        gpsImei:
          type: string
          example: ''
        address:
          type: string
          example: test address
        domainId:
          type: number
          example: 0
        pasportNum:
          type: string
          example: 0r0f030
        maxCredit:
          type: number
          example: 0
        inn:
          type: string
          example: ''
        telegramId:
          type: string
          example: ''
        phone:
          type: string
          example: 373921
        comments:
          type: string
          example: Test admin for API
        disable:
          type: number
          example: 0
        maxRows:
          type: number
          example: 0
        expire:
          type: string
          example: "0000-00-00 00:00:00"
        creditDays:
          type: number
          example: 0
        sipNumber:
          type: string
          example: ''
    AdminAddResponse:
      type: object
      properties:
        affected:
          type: number
          example: 1
        aid:
          type: number
          example: 100
        insertId:
          type: number
          example: 43822
        mainAid:
          type: number
          example: 1
        total:
          type: number
          example: 0
    ExchangeRates:
      type: object
      properties:
        changed:
          type: string
          example: "2022-12-06"
        id:
          type: number
          example: 1
        iso:
          type: number
          example: 840
        money:
          type: string
          example: Dollars
        rate:
          type: number
          example: 31
        shortName:
          type: string
          example: USD
    ExchangeRatesLog:
      type: object
      properties:
        date:
          type: string
          example: "2022-02-21 11:37:41"
        id:
          type: number
          example: 1
        iso:
          type: number
          example: 840
        money:
          type: string
          example: Dollars
        rate:
          type: number
          example: 30
    AdminChangeRequest:
      type: object
      properties:
        aLogin:
          type: string
          example: TestApi
        aFio:
          type: string
          example: Test admin API
        passportGrant:
          type: string
          example: ''
        birthday:
          type: string
          format: date
          example: 1999-12-31
        gid:
          type: number
          example: 0
        rfidNumber:
          type: string
          example: ''
        minSearchChars:
          type: number
          example: 0
        email:
          type: string
          example: test@gmail.com
        cellPhone:
          type: string
          example: +38050938122960
        passportDate:
          type: string
          format: date
          example: 2017-12-31
        gpsImei:
          type: string
          example: ''
        address:
          type: string
          example: test address
        domainId:
          type: number
          example: 0
        pasportNum:
          type: string
          example: 0r0f030
        maxCredit:
          type: number
          example: 0
        inn:
          type: string
          example: ''
        telegramId:
          type: string
          example: ''
        phone:
          type: string
          example: 373921
        comments:
          type: string
          example: Test admin for API
        disable:
          type: number
          example: 0
        maxRows:
          type: number
          example: 0
        expire:
          type: string
          example: "0000-00-00 00:00:00"
        creditDays:
          type: number
          example: 0
        sipNumber:
          type: string
          example: ''
    AdminChangeResponse:
      type: object
      properties:
        address:
          type: string
          example: test address
        adminAccess:
          type: number
          example: 0
        affected:
          type: number
          example: 0
        aid:
          type: number
          example: 100
        apiKey:
          type: string
          example: ''
        avatarLink:
          type: string
          example: ''
        aFio:
          type: string
          example: Test admin API
        aLogin:
          type: string
          example: TestApi
        birthday:
          type: string
          format: date
          example: 1999-12-31
        cellPhone:
          type: string
          example: +38050938122960
        comments:
          type: string
          example: Test admin for API
        creditDays:
          type: number
          example: 0
        department:
          type: number
          example: 0
        disable:
          type: number
          example: 0
        domainId:
          type: number
          example: 0
        domainName:
          type: string
          example: ''
        email:
          type: string
          example: test@gmail.com
        expire:
          type: string
          example: "0000-00-00 00:00:00"
        fullLog:
          type: number
          example: 0
        g2fa:
          type: string
          example: ''
        gid:
          type: number
          example: 0
        gpsImei:
          type: string
          example: ''
        inn:
          type: string
          example: ''
        mainAid:
          type: number
          example: 1
        maxCredit:
          type: number
          example: 0
        maxRows:
          type: number
          example: 0
        minSearchChars:
          type: number
          example: 0
        module:
          type: string
          example: ''
        pasportDate:
          type: string
          example: "0000-00-00"
        pasportGrant:
          type: string
          example: ''
        pasportNum:
          type: string
          example: 0r0f030
        phone:
          type: number
          example: 373921
        position:
          type: number
          example: 0
        regdate:
          type: string
          format: date
          example: "2022-09-30"
        rfidNumber:
          type: string
          example: ''
        sessionIp:
          type: string
          example: 0.0.0.0
        sipNumber:
          type: string
          example: ''
        startWork:
          type: string
          example: "0000-00-00"
        telegramId:
          type: string
          example: ''
        total:
          type: number
          example: 1
        webOptions:
          type: string
          example: ''
    VoipTrunk:
      type: object
      properties:
        failoverTrunk:
          type: number
          example: 1
        id:
          type: number
          example: 1
        name:
          type: string
          example: Hello Test
        protocol:
          type: string
          example: SIP
        providerName:
          type: string
          example: Test
    VoipTrunkInfo:
      type: object
      properties:
        addparameter:
          type: string
          example: ""
        addprefix:
          type: string
          example: ""
        affected:
          type: number
          example: 0
        failoverTrunk:
          type: number
          example: 1
        id:
          type: number
          example: 1
        name:
          type: string
          example: Hello Test
        protocol:
          type: string
          example: SIP
        providerIp:
          type: string
          example: ""
        providerName:
          type: string
          example: Test
        removeprefix:
          type: string
          example: ""
        secondusedcarrier:
          type: number
          example: 0
        secondusedratecard:
          type: number
          example: 0
        secondusedreal:
          type: number
          example: 0
        status:
          type: number
          example: 0
        total:
          type: number
          example: 1
        trunkprefix:
          type: string
          example: ""
    TrunkAddRequest:
      type: object
      properties:
        addprefix:
          type: string
          example: 1
        extParams:
          type: string
          example: 1
        failoverTrunk:
          type: number
          example: 1
        name:
          type: string
          example: Test
        password:
          type: string
          example: testpass
        protocol:
          type: string
          example: IAX2
        providerIp:
          type: string
          example: 0.0.0.0
        providerName:
          type: string
          example: Test12
        removeprefix:
          type: number
          example: 0
        username:
          type: string
          example: TestName
    InsertResponse200:
      type: object
      properties:
        affected:
          type: integer
          format: int32
          example: 1
        insertId:
          type: integer
          format: int32
          example: 253
        total:
          type: integer
          format: int32
          example: 0
    InsertTpResponse200:
      type: object
      properties:
        affected:
          type: integer
          format: int32
          example: 1
        tpId:
          type: integer
          format: int32
          example: 253
        total:
          type: integer
          format: int32
          example: 0
    ChangeResponse200:
      type: object
      properties:
        affected:
          type: integer
          format: int32
          example: 1
        total:
          type: integer
          format: int32
          example: 0
    InsertResponse400:
      type: object
      properties:
        affected:
          type: number
          example: 0
        total:
          type: number
          example: 0
        errno:
          type: number
          example: 7
        errstr:
          type: string
          example: ERROR_DUPLICATE
    InsertTpResponse400:
      type: object
      properties:
        tpId:
          type: string
          example:
        errno:
          type: number
          example: 7
        errstr:
          type: string
          example: ERROR_DUPLICATE
    ExtraTarificationInfo:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: Test
        prepaidTime:
          type: number
          example: 1
    ExtraTarificationAddRequest:
      type: object
      properties:
        name:
          type: string
          example: Test Api
        prepaidTime:
          type: number
          example: 10
    RouteInfo:
      type: object
      properties:
        date:
          type: string
          example: "0000-00-00"
        disable:
          type: number
          example: 0
        id:
          type: number
          example: 29
        name:
          type: string
          example: USA
        parent:
          type: number
          example: 0
        prefix:
          type: number
          example: 12
    RouteAddRequest:
      type: object
      properties:
        prefix:
          type: string
          example: 38094
        name:
          type: string
          example: Ukraine PEOPLEnET
        describe:
          type: string
          example: box inside
        disable:
          type: number
          example: 1
    VoipAddUser:
      type: object
      properties:
        allowAnswer:
          type: number
          example: 1
        allowCalls:
          type: number
          example: 1
        cid:
          type: string
          example: 10:fe:ed:43:8f:35
        disable:
          type: number
          example: 0
        filterId:
          type: number
          example: 1
        ip:
          type: string
          example: 0.0.0.0
        number:
          type: number
          example: 380506712617
        provisionNasId:
          type: string
          example: 1
        provisionPort:
          type: number
          example: 0
        simultaneously:
          type: number
          example: 2
        tpId:
          type: number
          example: 40
        uid:
          type: number
          example: 13230
        voipExpire:
          type: string
          example: '0000-00-00'
    VoipUserInfo:
      type: object
      properties:
        allowAnswer:
          type: number
          example: 0
        allowCalls:
          type: number
          example: 0
        cid:
          type: string
          example: '10:fe:ed:43:8f:35'
        dayAbon:
          type: number
          example: 10
        disable:
          type: number
          example: 0
        expire:
          type: string
          example: '0000-00-00'
        extraNumbersDayFee:
          type: number
          example: 1
        extraNumbersMonthFee:
          type: number
          example: 5
        filterId:
          type: number
          example: 1
        id:
          type: number
          example: 42
        ip:
          type: string
          example: 0.0.0.0
        logins:
          type: number
          example: 0
        monthAbon:
          type: number
          example: 100
        nat:
          type: number
          example: 1
        number:
          type: number
          example: 380509152720
        provisionNasId:
          type: number
          example: 0
        provisionPort:
          type: number
          example: 0
        registration:
          type: string
          example: '0000-00-00'
        simultaneously:
          type: number
          example: 0
        tpCredit:
          type: number
          example: 0
        tpId:
          type: number
          example: 39
        tpName:
          type: string
          example: test api change
        tpNum:
          type: number
          example: 23131
        uid:
          type: number
          example: 103161
        voipExpire:
          type: string
          example: '0000-00-00'
    VoipUserChangeTp:
      type: object
      properties:
        date:
          type: string
          example: '2022-12-18'
          description: "Может принимать два значения 1 и 0. При 0 изменяет тариф немедленно, при 1 устанавливает дату изменения тарифа"
        period:
          type: number
          example: 1
          description: "Игнорируется если period 0. Если значение пустое и period 1, берется 1 день следующего месяца"
        tpId:
          type: number
          example: 39
    VoipUserList:
      type: object
      properties:
        cid:
          type: string
          example: '10:fe:ed:43:8f:35'
        dayFee:
          type: number
          example: 10
        id:
          type: number
          example: 43
        ip:
          type: string
          example: 0.0.0.0
        monthFee:
          type: number
          example: 50
        number:
          type: string
          example: 00509152720
        tpId:
          type: number
          example: 40
        tpName:
          type: string
          example: TestVoipAdd
        uid:
          type: number
          example: 102167
    VoipPhoneAliase:
      type: object
      properties:
        changed:
          type: string
          example: "2022-12-12 17:13:23"
        disable:
          type: number
          example: 0
        id:
          type: number
          example: 1
        number:
          type: number
          example: 380506712612
        uid:
          type: number
          example: 102167
    VoipTpListInfo:
      type: object
      properties:
        age:
          type: number
          example: 0
        dayFee:
          type: number
          example: 10
        id:
          type: number
          example: 1235
        logins:
          type: number
          example: 0
        monthFee:
          type: number
          example: 50
        name:
          type: string
          example: TestVoipTp
        paymentType:
          type: number
          example: 0
        timeTarifs:
          type: number
          example: 0
        tpId:
          type: number
          example: 40
    VoipTpAddRequest:
      type: object
      properties:
        activPrice:
          type: number
          example: 0
        addTp:
          type: string
          example: Додати
        age:
          type: number
          example: 0
        alert:
          type: number
          example: 0
        changePrice:
          type: number
          example: 0
        creditTresshold:
          type: number
          example: 0
        dayFee:
          type: number
          example: 0
        dayTimeLimit:
          type: number
          example: 0
        extraNumbersDayFee:
          type: number
          example: 0
        extraNumbersMonthFee:
          type: number
          example: 0
        feesMethod:
          type: number
          example: 1
        filterId:
          type: string
          example: 1
        firstPeriod:
          type: number
          example: 0
        firstPeriodStep:
          type: number
          example: 0
        freeTime:
          type: number
          example: 0
        id:
          type: number
          example: 42423423
        maxSessionDuration:
          type: number
          example: 0
        minSessionCost:
          type: number
          example: 0
        monthFee:
          type: number
          example: 0
        monthTimeLimit:
          type: number
          example: 0
        name:
          type: string
          example: TestVoipTp
        nextPeriod:
          type: number
          example: 0
        nextPeriodStep:
          type: number
          example: 0
        paymentType:
          type: number
          example: 0
        simultaneously:
          type: number
          example: 0
        timeDivision:
          type: string
          example: ""
        timeTarif:
          type: number
          example: 0
        tpId:
          type: number
          example: 0
        weekTimeLimit:
          type: number
          example: 0
    VoipTpInfo:
      type: object
      properties:
        abonDistribution:
          type: number
          example: 0
        activatePrice:
          type: number
          example: 10
        activeDayFee:
          type: number
          example: 0
        activPrice:
          type: number
          example: 10
        affected:
          type: number
          example: 0
        age:
          type: number
          example: 0
        alert:
          type: number
          example: 0
        billsPriority:
          type: number
          example: 0
        changePrice:
          type: number
          example: 50
        comments:
          type: string
          example: ""
        credit:
          type: number
          example: 0
        creditTresshold:
          type: number
          example: 0
        dayFee:
          type: number
          example: 10
        dayTimeLimit:
          type: number
          example: 0
        dayTrafLimit:
          type: number
          example: 0
        describeAid:
          type: string
          example: ""
        extraNumbersDayFee:
          type: number
          example: 1
        extraNumbersMonthFee:
          type: number
          example: 5
        extBillAccount:
          type: number
          example: 0
        extBillFeesMethod:
          type: number
          example: 0
        feesMethod:
          type: number
          example: 1
        filterId:
          type: number
          example: 1
        fine:
          type: number
          example: 0
        firstPeriod:
          type: number
          example: 0
        firstPeriodStep:
          type: number
          example: 0
        fixedFeesDay:
          type: number
          example: 0
        freeTime:
          type: number
          example: 0
        gid:
          type: number
          example: 0
        id:
          type: number
          example: 23131
        ippool:
          type: number
          example: 0
        logins:
          type: number
          example: 2
        maxSessionDuration:
          type: number
          example: 0
        minSessionCost:
          type: number
          example: 0
        minUse:
          type: number
          example: 0
        module:
          type: string
          example: Voip
        monthFee:
          type: number
          example: 100
        monthTimeLimit:
          type: number
          example: 0
        monthTrafLimit:
          type: number
          example: 0
        name:
          type: string
          example: test api change
        negDepositFilterId:
          type: string
          example: ""
        negDepositIppool:
          type: number
          example: 0
        nextPeriod:
          type: number
          example: 0
        nextPeriodStep:
          type: number
          example: 0
        nextTarifPlan:
          type: number
          example: 0
        nextTpId:
          type: number
          example: 0
        octetsDirection:
          type: number
          example: 0
        paymentType:
          type: number
          example: 0
        periodAlignment:
          type: number
          example: 0
        postpaidDailyFee:
          type: number
          example: 0
        postpaidDayFee:
          type: number
          example: 0
        postpaidMonthlyFee:
          type: number
          example: 0
        postpaidMonthFee:
          type: number
          example: 0
        prepaidTrafic:
          type: number
          example: 0
        priority:
          type: number
          example: 0
        promotional:
          type: number
          example: 0
        radPairs:
          type: string
          example: "ERX-Service-Activate:1+='svc-global-pppoe(15242880, 15242880)',"
        reductionFee:
          type: number
          example: 0
        serviceId:
          type: number
          example: 0
        simultaneously:
          type: number
          example: 2
        smallDepositAction:
          type: number
          example: 0
        status:
          type: number
          example: 0
        timeDivision:
          type: number
          example: 0
        total:
          type: number
          example: 1
        totalTimeLimit:
          type: number
          example: 0
        totalTrafLimit:
          type: number
          example: 0
        tpGid:
          type: number
          example: 0
        tpId:
          type: number
          example: 39
        trafficTransferPeriod:
          type: number
          example: 0
        uplimit:
          type: number
          example: 0
        userCreditLimit:
          type: number
          example: 0
        weekTimeLimit:
          type: number
          example: 0
        weekTrafLimit:
          type: number
          example: 0
    CrmCommentPin:
      type: object
      properties:
        id:
          type: integer
          example: 4
        comment_id:
          type: integer
          example: 10
    CablecatAttachment:
      type: object
      properties:
        id:
          type: object
          properties:
            filename:
              type: string
              example: 'image.png'
            Size:
              type: integer
              example: 563233
            Contents:
              type: string
              example: 'image content'
    InternetHangupRequest:
      type: object
      properties:
        nasId:
          type: number
          example: 9
        nasPortId:
          type: number
          example: 1
        acctSessionId:
          type: string
          example: 6Kn8aip1zz
        userName:
          type: string
          example: 0000002
    InternetHangupResponse:
      type: object
      properties:
        nasId:
          type: number
          example: 9
        nasIp:
          type: string
          example: 192.168.1.130
        port:
          type: string
          example: 1
        message:
          type: string
          example: "NAS ID: 9\n NAS IP: 192.168.1.130\n Port: \n SESSION_ID: 6Kn8aip1zz\n\n Return: 0"
        result:
          type: string
          example: OK
        return:
          type: number
          example: 0
  securitySchemes:
    KEY:
      type: apiKey
      name: KEY
      in: header
